{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","Phonebook","onAddContact","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","onSubmit","preventDefault","className","s","form","list","FORM_CONFIG","map","type","pattern","title","Item","labelName","input","onChange","required","btnSubmit","PropTypes","string","isRequired","Filter","contactName","onFindContact","filterLabel","htmlFor","filterInput","Contacts","contacts","onDeleteContact","contactsList","id","contactsItem","contactsParagraph","contactsNumber","onClick","contactsBtn","App","props","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","some","contact","alert","prevState","nanoid","contactsTitle","toLowerCase","includes","contactId","defaultProps","contactsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f342d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__253pP\",\"list\":\"ContactForm_list__2MLoA\",\"Item\":\"ContactForm_Item__q1e1p\",\"labelName\":\"ContactForm_labelName__3AufA\",\"labelNumber\":\"ContactForm_labelNumber__1lohg\",\"btnSubmit\":\"ContactForm_btnSubmit__3WGk-\",\"form\":\"ContactForm_form__YuROC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"Contacts_contactsTitle__2l2Uy\",\"contactsList\":\"Contacts_contactsList__2oIrB\",\"contactsItem\":\"Contacts_contactsItem__10bwh\",\"contactsParagraph\":\"Contacts_contactsParagraph__1LXvq\",\"contactsNumber\":\"Contacts_contactsNumber__1kcXj\",\"contactsBtn\":\"Contacts_contactsBtn__31HZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4V6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__zS7-H\",\"filterInput\":\"Filter_filterInput__3sSlI\"};","// import { Component } from \"react/cjs/react.production.min\";\n// import shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport FORM_CONFIG from \"../../json/formConfig.json\";\nimport { useState } from \"react\";\n\nexport default function Phonebook({ onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    name === \"name\" && setName(value);\n    name === \"number\" && setNumber(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    onAddContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <ul className={s.list}>\n        {FORM_CONFIG.map(({ type, name, pattern, title }) => (\n          <li key={name} className={s.Item}>\n            <label className={s.labelName}>\n              {name}\n              <input\n                className={s.input}\n                type={type}\n                name={name}\n                pattern={pattern}\n                title={title}\n                value={name[name]}\n                onChange={handleChange}\n                required\n              />\n            </label>\n          </li>\n        ))}\n      </ul>\n\n      <button type=\"submit\" className={s.btnSubmit}>\n        add contact\n      </button>\n    </form>\n  );\n}\n\nFORM_CONFIG.PropTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nPhonebook.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\n// export default class ContactForm {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   nameId = shortid.generate();\n//   numberId = shortid.generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = (e) => {\n//     const { submit } = this.props;\n//     alert(\"Contact has been saved:\" + this.state.name);\n//     e.preventDefault();\n\n//     submit(this.state);\n\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({ name: \"\", number: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <form className={s.form} onSubmit={this.handleSubmit}>\n//         <label className={s.labelName} htmlFor={this.nameId}>\n//           Name\n//         </label>\n//         <input\n//           className={s.input}\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//           value={this.state.name}\n//           onChange={this.handleChange}\n//           id={this.nameId}\n//         />\n\n//         <label className={s.labelNumber} htmlFor={this.numberId}>\n//           Number\n//         </label>\n//         <input\n//           className={s.input}\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//           value={this.state.number}\n//           onChange={this.handleChange}\n//           id={this.numberId}\n//         />\n\n//         <button type=\"submit\" className={s.btnSubmit}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   submit: PropTypes.func,\n// };\n","// import { Fragment } from \"react/cjs/react.production.min\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ contactName, onFindContact }) => {\n  return (\n    <label className={s.filterLabel} htmlFor=\"\">\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={contactName}\n        onChange={onFindContact}\n      />\n    </label>\n  );\n};\n\n// const Filter = ({ filter, onChangeFilter }) => (\n//   <Fragment>\n//     <label className={s.filterLabel}>Find contacts by name</label>\n//     <input className={s.filterInput} value={filter} onChange={onChangeFilter} />\n//   </Fragment>\n// );\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import s from \"./Contacts.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <div>\n    <ul className={s.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactsItem}>\n          <p className={s.contactsParagraph}>{name}:</p>\n          <p className={s.contactsNumber}>{number}</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              onDeleteContact(id);\n            }}\n            className={s.contactsBtn}\n          >\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport s from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport contactsData from \"./json/contactsData.json\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nexport default function App(props) {\n  const [contacts, setContacts] = useState(props.contacts);\n  const [filter, setFilter] = useState(props.filter);\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    parsedContacts && setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) =>\n    contacts.some((contact) => name === contact.name)\n      ? alert(`${name} is already in contacts`)\n      : setContacts((prevState) => [\n          ...prevState,\n          { id: nanoid(5), name, number },\n        ]);\n\n  const deleteContact = (contactId) =>\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n\n  const findContactsByName = (event) => setFilter(event.currentTarget.value);\n\n  const filterContactList = () =>\n    contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  return (\n    <main className={s.App}>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={addContact} />\n\n      <h2 className={s.contactsTitle}>Contacts</h2>\n      <Filter contactName={filter} onFindContact={findContactsByName} />\n      <Contacts\n        contacts={filterContactList()}\n        onDeleteContact={deleteContact}\n      />\n    </main>\n  );\n}\n\nApp.defaultProps = {\n  contacts: contactsData,\n  filter: \"\",\n};\n\n// class App extends Component {\n//   state = {\n//     contacts: contactsData,\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const phoneBook = localStorage.getItem(\"contacts\");\n//     const parsedPhonebook = JSON.parse(phoneBook);\n\n//     if (parsedPhonebook) {\n//       this.setState({ contacts: parsedPhonebook });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = ({ name, number }) => {\n//     const { contacts } = this.state;\n\n//     contacts.some((contact) => name === contact.name)\n//       ? alert(`${name} is already in contacts`)\n//       : this.setState(({ contacts }) => ({\n//           contacts: [...contacts, { name, number, id: shortid() }],\n//         }));\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.target.value });\n//   };\n\n//   getFiltredElem = () => {\n//     const filterToLowerCase = this.state.filter.toLowerCase();\n\n//     return this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filterToLowerCase)\n//     );\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className={s.App}>\n//         <h1>PhoonebooK</h1>\n//         <ContactForm submit={this.addContact} />\n//         <h2 className={s.contactsTitle}>Contacts 📞</h2>\n//         <Filter filter={this.state.filter} onChangeFilter={this.changeFilter} />\n//         <Contacts\n//           contacts={this.getFiltredElem()}\n//           deleteContact={this.deleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}