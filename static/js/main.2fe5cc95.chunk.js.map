{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/Contact.form.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleChange","e","target","value","setState","handleSubmit","submit","props","alert","preventDefault","reset","className","s","form","onSubmit","this","labelName","htmlFor","input","type","pattern","title","required","onChange","id","labelNumber","btnSubmit","Component","Filter","filter","onChangeFilter","filterLabel","filterInput","Contacts","contacts","deleteContact","contactsList","map","contactsItem","contactsParagraph","contactsNumber","onClick","contactsBtn","App","contactsData","addContact","some","contact","changeFilter","getFiltredElem","filterToLowerCase","toLowerCase","includes","contactId","prevState","phoneBook","localStorage","getItem","parsedPhonebook","JSON","parse","prevProps","setItem","stringify","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fe5cc95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4V6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__zS7-H\",\"filterInput\":\"Filter_filterInput__3sSlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Contact_form_input__10eiy\",\"labelName\":\"Contact_form_labelName__18rFP\",\"labelNumber\":\"Contact_form_labelNumber__3XZSh\",\"btnSubmit\":\"Contact_form_btnSubmit__3EmkM\",\"form\":\"Contact_form_form__3bAYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"Contacts_contactsTitle__2l2Uy\",\"contactsList\":\"Contacts_contactsList__2oIrB\",\"contactsItem\":\"Contacts_contactsItem__10bwh\",\"contactsParagraph\":\"Contacts_contactsParagraph__1LXvq\",\"contactsNumber\":\"Contacts_contactsNumber__1kcXj\",\"contactsBtn\":\"Contacts_contactsBtn__31HZF\"};","import { Component } from \"react/cjs/react.production.min\";\nimport s from \"./Contact.form.module.css\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = shortid.generate();\n  numberId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { submit } = this.props;\n    alert(\"Contact has been saved:\" + this.state.name);\n    e.preventDefault();\n\n    submit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.labelName} htmlFor={this.nameId}>\n          Name\n        </label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={this.state.name}\n          onChange={this.handleChange}\n          id={this.nameId}\n        />\n\n        <label className={s.labelNumber} htmlFor={this.numberId}>\n          Number\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={this.state.number}\n          onChange={this.handleChange}\n          id={this.numberId}\n        />\n\n        <button type=\"submit\" className={s.btnSubmit}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func,\n};\n","import { Fragment } from \"react/cjs/react.production.min\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, onChangeFilter }) => (\n  <Fragment>\n    <label className={s.filterLabel}>Find contacts by name</label>\n    <input className={s.filterInput} value={filter} onChange={onChangeFilter} />\n  </Fragment>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import s from \"./Contacts.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Contacts = ({ contacts, deleteContact }) => (\n  <div>\n    <ul className={s.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactsItem}>\n          <p className={s.contactsParagraph}>{name}:</p>\n          <p className={s.contactsNumber}>{number}</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              deleteContact(id);\n            }}\n            className={s.contactsBtn}\n          >\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { Component } from \"react/cjs/react.production.min\";\nimport s from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport contactsData from \"./json/contactsData.json\";\nimport shortid from \"shortid\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: contactsData,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const phoneBook = localStorage.getItem(\"contacts\");\n    const parsedPhonebook = JSON.parse(phoneBook);\n\n    if (parsedPhonebook) {\n      this.setState({ contacts: parsedPhonebook });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    contacts.some((contact) => name === contact.name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts, { name, number, id: shortid() }],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFiltredElem = () => {\n    const filterToLowerCase = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.App}>\n        <h1>PhoonebooK</h1>\n        <ContactForm submit={this.addContact} />\n        <h2 className={s.contactsTitle}>Contacts 📞</h2>\n        <Filter filter={this.state.filter} onChangeFilter={this.changeFilter} />\n        <Contacts\n          contacts={this.getFiltredElem()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}